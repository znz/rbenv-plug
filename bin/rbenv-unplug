#!/usr/bin/env bash
#
# Summary: Remove plugins.
#
# Usage: rbenv unplug [-f|--force] <plugin> [<plugin> ...]
#
#    -f  Attempt to remove the specified plugins without prompting
#        for confirmation. If the plugins do not exist, do not
#        display an error message.

set -euo pipefail
[ -n "${RBENV_DEBUG-}" ] && set -x
shopt -s nullglob

[ $# -gt 0 ] || exec rbenv-help unplug

# Provide rbenv completions
if [ --complete = "$1" ]; then
  {
    for plugin in "$RBENV_ROOT/plugins/"*; do
      plugin="${plugin##*/}"
      case "${plugin}" in
        rbenv-*)
          echo ${plugin##rbenv-}
          ;;
        *)
          echo ${plugin}
          ;;
      esac
    done
  } | sort
  exit 0
fi

unset FORCE
if [ "$1" = "-f" ] || [ "$1" = "--force" ]; then
  FORCE=true
  shift
fi

confirm_and_remove () {
  if [ -z "${FORCE:+set}" ]; then
    read -p "rbenv-unplug: remove '$1'? [yN] "
    case "$REPLY" in
    y* | Y* ) ;;
    * ) exit 1 ;;
    esac
  fi
  echo "Removing '$1'..."
  rm -rf "$1"
}

for plugin_name in "$@"; do
  plugin_dir="$RBENV_ROOT/plugins/$plugin_name"
  alt_plugin_dir="$RBENV_ROOT/plugins/rbenv-$plugin_name"
  if [ -d "$plugin_dir" ]; then
    confirm_and_remove "$plugin_dir"
  elif [ -d "$alt_plugin_dir" ]; then
    confirm_and_remove "$alt_plugin_dir"
  elif [ -z "${FORCE:+set}" ]; then
    echo "'$plugin_name' does not installed."
    exit 1
  fi
done
